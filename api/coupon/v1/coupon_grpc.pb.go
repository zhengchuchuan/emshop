// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v5.29.3
// source: coupon.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	Coupon_CreateCouponTemplate_FullMethodName          = "/Coupon/CreateCouponTemplate"
	Coupon_GetCouponTemplate_FullMethodName             = "/Coupon/GetCouponTemplate"
	Coupon_UpdateCouponTemplate_FullMethodName          = "/Coupon/UpdateCouponTemplate"
	Coupon_ListCouponTemplates_FullMethodName           = "/Coupon/ListCouponTemplates"
	Coupon_ReceiveCoupon_FullMethodName                 = "/Coupon/ReceiveCoupon"
	Coupon_GetUserCoupons_FullMethodName                = "/Coupon/GetUserCoupons"
	Coupon_GetAvailableCoupons_FullMethodName           = "/Coupon/GetAvailableCoupons"
	Coupon_CalculateCouponDiscount_FullMethodName       = "/Coupon/CalculateCouponDiscount"
	Coupon_UseCoupons_FullMethodName                    = "/Coupon/UseCoupons"
	Coupon_ReleaseCoupons_FullMethodName                = "/Coupon/ReleaseCoupons"
	Coupon_CreateFlashSaleActivity_FullMethodName       = "/Coupon/CreateFlashSaleActivity"
	Coupon_GetFlashSaleActivity_FullMethodName          = "/Coupon/GetFlashSaleActivity"
	Coupon_ListFlashSaleActivities_FullMethodName       = "/Coupon/ListFlashSaleActivities"
	Coupon_GetActiveFlashSales_FullMethodName           = "/Coupon/GetActiveFlashSales"
	Coupon_ParticipateFlashSale_FullMethodName          = "/Coupon/ParticipateFlashSale"
	Coupon_GetFlashSaleStock_FullMethodName             = "/Coupon/GetFlashSaleStock"
	Coupon_GetUserFlashSaleRecord_FullMethodName        = "/Coupon/GetUserFlashSaleRecord"
	Coupon_SubmitOrderWithCoupons_FullMethodName        = "/Coupon/SubmitOrderWithCoupons"
	Coupon_ProcessFlashSaleWithInventory_FullMethodName = "/Coupon/ProcessFlashSaleWithInventory"
	Coupon_GetTransactionStatus_FullMethodName          = "/Coupon/GetTransactionStatus"
	Coupon_TryFlashSale_FullMethodName                  = "/Coupon/TryFlashSale"
	Coupon_ConfirmFlashSale_FullMethodName              = "/Coupon/ConfirmFlashSale"
	Coupon_CancelFlashSale_FullMethodName               = "/Coupon/CancelFlashSale"
)

// CouponClient is the client API for Coupon service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type CouponClient interface {
	// 优惠券模板管理
	CreateCouponTemplate(ctx context.Context, in *CreateCouponTemplateRequest, opts ...grpc.CallOption) (*CouponTemplateResponse, error)
	GetCouponTemplate(ctx context.Context, in *GetCouponTemplateRequest, opts ...grpc.CallOption) (*CouponTemplateResponse, error)
	UpdateCouponTemplate(ctx context.Context, in *UpdateCouponTemplateRequest, opts ...grpc.CallOption) (*CouponTemplateResponse, error)
	ListCouponTemplates(ctx context.Context, in *ListCouponTemplatesRequest, opts ...grpc.CallOption) (*ListCouponTemplatesResponse, error)
	// 用户优惠券操作
	ReceiveCoupon(ctx context.Context, in *ReceiveCouponRequest, opts ...grpc.CallOption) (*UserCouponResponse, error)
	GetUserCoupons(ctx context.Context, in *GetUserCouponsRequest, opts ...grpc.CallOption) (*ListUserCouponsResponse, error)
	GetAvailableCoupons(ctx context.Context, in *GetAvailableCouponsRequest, opts ...grpc.CallOption) (*ListUserCouponsResponse, error)
	// 优惠券使用（支付时调用）
	CalculateCouponDiscount(ctx context.Context, in *CalculateCouponDiscountRequest, opts ...grpc.CallOption) (*CalculateCouponDiscountResponse, error)
	UseCoupons(ctx context.Context, in *UseCouponsRequest, opts ...grpc.CallOption) (*UseCouponsResponse, error)
	ReleaseCoupons(ctx context.Context, in *ReleaseCouponsRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// 秒杀活动管理
	CreateFlashSaleActivity(ctx context.Context, in *CreateFlashSaleActivityRequest, opts ...grpc.CallOption) (*FlashSaleActivityResponse, error)
	GetFlashSaleActivity(ctx context.Context, in *GetFlashSaleActivityRequest, opts ...grpc.CallOption) (*FlashSaleActivityResponse, error)
	ListFlashSaleActivities(ctx context.Context, in *ListFlashSaleActivitiesRequest, opts ...grpc.CallOption) (*ListFlashSaleActivitiesResponse, error)
	GetActiveFlashSales(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ListFlashSaleActivitiesResponse, error)
	// 秒杀参与
	ParticipateFlashSale(ctx context.Context, in *ParticipateFlashSaleRequest, opts ...grpc.CallOption) (*ParticipateFlashSaleResponse, error)
	GetFlashSaleStock(ctx context.Context, in *GetFlashSaleStockRequest, opts ...grpc.CallOption) (*FlashSaleStockResponse, error)
	GetUserFlashSaleRecord(ctx context.Context, in *GetUserFlashSaleRecordRequest, opts ...grpc.CallOption) (*ListFlashSaleRecordsResponse, error)
	// DTM分布式事务接口
	SubmitOrderWithCoupons(ctx context.Context, in *SubmitOrderWithCouponsRequest, opts ...grpc.CallOption) (*SubmitOrderWithCouponsResponse, error)
	ProcessFlashSaleWithInventory(ctx context.Context, in *ProcessFlashSaleWithInventoryRequest, opts ...grpc.CallOption) (*ProcessFlashSaleWithInventoryResponse, error)
	GetTransactionStatus(ctx context.Context, in *GetTransactionStatusRequest, opts ...grpc.CallOption) (*GetTransactionStatusResponse, error)
	// DTM TCC回调接口
	TryFlashSale(ctx context.Context, in *ParticipateFlashSaleRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	ConfirmFlashSale(ctx context.Context, in *ParticipateFlashSaleRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	CancelFlashSale(ctx context.Context, in *ParticipateFlashSaleRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type couponClient struct {
	cc grpc.ClientConnInterface
}

func NewCouponClient(cc grpc.ClientConnInterface) CouponClient {
	return &couponClient{cc}
}

func (c *couponClient) CreateCouponTemplate(ctx context.Context, in *CreateCouponTemplateRequest, opts ...grpc.CallOption) (*CouponTemplateResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CouponTemplateResponse)
	err := c.cc.Invoke(ctx, Coupon_CreateCouponTemplate_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponClient) GetCouponTemplate(ctx context.Context, in *GetCouponTemplateRequest, opts ...grpc.CallOption) (*CouponTemplateResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CouponTemplateResponse)
	err := c.cc.Invoke(ctx, Coupon_GetCouponTemplate_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponClient) UpdateCouponTemplate(ctx context.Context, in *UpdateCouponTemplateRequest, opts ...grpc.CallOption) (*CouponTemplateResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CouponTemplateResponse)
	err := c.cc.Invoke(ctx, Coupon_UpdateCouponTemplate_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponClient) ListCouponTemplates(ctx context.Context, in *ListCouponTemplatesRequest, opts ...grpc.CallOption) (*ListCouponTemplatesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListCouponTemplatesResponse)
	err := c.cc.Invoke(ctx, Coupon_ListCouponTemplates_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponClient) ReceiveCoupon(ctx context.Context, in *ReceiveCouponRequest, opts ...grpc.CallOption) (*UserCouponResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UserCouponResponse)
	err := c.cc.Invoke(ctx, Coupon_ReceiveCoupon_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponClient) GetUserCoupons(ctx context.Context, in *GetUserCouponsRequest, opts ...grpc.CallOption) (*ListUserCouponsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListUserCouponsResponse)
	err := c.cc.Invoke(ctx, Coupon_GetUserCoupons_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponClient) GetAvailableCoupons(ctx context.Context, in *GetAvailableCouponsRequest, opts ...grpc.CallOption) (*ListUserCouponsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListUserCouponsResponse)
	err := c.cc.Invoke(ctx, Coupon_GetAvailableCoupons_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponClient) CalculateCouponDiscount(ctx context.Context, in *CalculateCouponDiscountRequest, opts ...grpc.CallOption) (*CalculateCouponDiscountResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CalculateCouponDiscountResponse)
	err := c.cc.Invoke(ctx, Coupon_CalculateCouponDiscount_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponClient) UseCoupons(ctx context.Context, in *UseCouponsRequest, opts ...grpc.CallOption) (*UseCouponsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UseCouponsResponse)
	err := c.cc.Invoke(ctx, Coupon_UseCoupons_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponClient) ReleaseCoupons(ctx context.Context, in *ReleaseCouponsRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, Coupon_ReleaseCoupons_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponClient) CreateFlashSaleActivity(ctx context.Context, in *CreateFlashSaleActivityRequest, opts ...grpc.CallOption) (*FlashSaleActivityResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(FlashSaleActivityResponse)
	err := c.cc.Invoke(ctx, Coupon_CreateFlashSaleActivity_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponClient) GetFlashSaleActivity(ctx context.Context, in *GetFlashSaleActivityRequest, opts ...grpc.CallOption) (*FlashSaleActivityResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(FlashSaleActivityResponse)
	err := c.cc.Invoke(ctx, Coupon_GetFlashSaleActivity_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponClient) ListFlashSaleActivities(ctx context.Context, in *ListFlashSaleActivitiesRequest, opts ...grpc.CallOption) (*ListFlashSaleActivitiesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListFlashSaleActivitiesResponse)
	err := c.cc.Invoke(ctx, Coupon_ListFlashSaleActivities_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponClient) GetActiveFlashSales(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ListFlashSaleActivitiesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListFlashSaleActivitiesResponse)
	err := c.cc.Invoke(ctx, Coupon_GetActiveFlashSales_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponClient) ParticipateFlashSale(ctx context.Context, in *ParticipateFlashSaleRequest, opts ...grpc.CallOption) (*ParticipateFlashSaleResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ParticipateFlashSaleResponse)
	err := c.cc.Invoke(ctx, Coupon_ParticipateFlashSale_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponClient) GetFlashSaleStock(ctx context.Context, in *GetFlashSaleStockRequest, opts ...grpc.CallOption) (*FlashSaleStockResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(FlashSaleStockResponse)
	err := c.cc.Invoke(ctx, Coupon_GetFlashSaleStock_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponClient) GetUserFlashSaleRecord(ctx context.Context, in *GetUserFlashSaleRecordRequest, opts ...grpc.CallOption) (*ListFlashSaleRecordsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListFlashSaleRecordsResponse)
	err := c.cc.Invoke(ctx, Coupon_GetUserFlashSaleRecord_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponClient) SubmitOrderWithCoupons(ctx context.Context, in *SubmitOrderWithCouponsRequest, opts ...grpc.CallOption) (*SubmitOrderWithCouponsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SubmitOrderWithCouponsResponse)
	err := c.cc.Invoke(ctx, Coupon_SubmitOrderWithCoupons_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponClient) ProcessFlashSaleWithInventory(ctx context.Context, in *ProcessFlashSaleWithInventoryRequest, opts ...grpc.CallOption) (*ProcessFlashSaleWithInventoryResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ProcessFlashSaleWithInventoryResponse)
	err := c.cc.Invoke(ctx, Coupon_ProcessFlashSaleWithInventory_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponClient) GetTransactionStatus(ctx context.Context, in *GetTransactionStatusRequest, opts ...grpc.CallOption) (*GetTransactionStatusResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetTransactionStatusResponse)
	err := c.cc.Invoke(ctx, Coupon_GetTransactionStatus_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponClient) TryFlashSale(ctx context.Context, in *ParticipateFlashSaleRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, Coupon_TryFlashSale_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponClient) ConfirmFlashSale(ctx context.Context, in *ParticipateFlashSaleRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, Coupon_ConfirmFlashSale_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponClient) CancelFlashSale(ctx context.Context, in *ParticipateFlashSaleRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, Coupon_CancelFlashSale_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CouponServer is the server API for Coupon service.
// All implementations must embed UnimplementedCouponServer
// for forward compatibility.
type CouponServer interface {
	// 优惠券模板管理
	CreateCouponTemplate(context.Context, *CreateCouponTemplateRequest) (*CouponTemplateResponse, error)
	GetCouponTemplate(context.Context, *GetCouponTemplateRequest) (*CouponTemplateResponse, error)
	UpdateCouponTemplate(context.Context, *UpdateCouponTemplateRequest) (*CouponTemplateResponse, error)
	ListCouponTemplates(context.Context, *ListCouponTemplatesRequest) (*ListCouponTemplatesResponse, error)
	// 用户优惠券操作
	ReceiveCoupon(context.Context, *ReceiveCouponRequest) (*UserCouponResponse, error)
	GetUserCoupons(context.Context, *GetUserCouponsRequest) (*ListUserCouponsResponse, error)
	GetAvailableCoupons(context.Context, *GetAvailableCouponsRequest) (*ListUserCouponsResponse, error)
	// 优惠券使用（支付时调用）
	CalculateCouponDiscount(context.Context, *CalculateCouponDiscountRequest) (*CalculateCouponDiscountResponse, error)
	UseCoupons(context.Context, *UseCouponsRequest) (*UseCouponsResponse, error)
	ReleaseCoupons(context.Context, *ReleaseCouponsRequest) (*emptypb.Empty, error)
	// 秒杀活动管理
	CreateFlashSaleActivity(context.Context, *CreateFlashSaleActivityRequest) (*FlashSaleActivityResponse, error)
	GetFlashSaleActivity(context.Context, *GetFlashSaleActivityRequest) (*FlashSaleActivityResponse, error)
	ListFlashSaleActivities(context.Context, *ListFlashSaleActivitiesRequest) (*ListFlashSaleActivitiesResponse, error)
	GetActiveFlashSales(context.Context, *emptypb.Empty) (*ListFlashSaleActivitiesResponse, error)
	// 秒杀参与
	ParticipateFlashSale(context.Context, *ParticipateFlashSaleRequest) (*ParticipateFlashSaleResponse, error)
	GetFlashSaleStock(context.Context, *GetFlashSaleStockRequest) (*FlashSaleStockResponse, error)
	GetUserFlashSaleRecord(context.Context, *GetUserFlashSaleRecordRequest) (*ListFlashSaleRecordsResponse, error)
	// DTM分布式事务接口
	SubmitOrderWithCoupons(context.Context, *SubmitOrderWithCouponsRequest) (*SubmitOrderWithCouponsResponse, error)
	ProcessFlashSaleWithInventory(context.Context, *ProcessFlashSaleWithInventoryRequest) (*ProcessFlashSaleWithInventoryResponse, error)
	GetTransactionStatus(context.Context, *GetTransactionStatusRequest) (*GetTransactionStatusResponse, error)
	// DTM TCC回调接口
	TryFlashSale(context.Context, *ParticipateFlashSaleRequest) (*emptypb.Empty, error)
	ConfirmFlashSale(context.Context, *ParticipateFlashSaleRequest) (*emptypb.Empty, error)
	CancelFlashSale(context.Context, *ParticipateFlashSaleRequest) (*emptypb.Empty, error)
	mustEmbedUnimplementedCouponServer()
}

// UnimplementedCouponServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedCouponServer struct{}

func (UnimplementedCouponServer) CreateCouponTemplate(context.Context, *CreateCouponTemplateRequest) (*CouponTemplateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCouponTemplate not implemented")
}
func (UnimplementedCouponServer) GetCouponTemplate(context.Context, *GetCouponTemplateRequest) (*CouponTemplateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCouponTemplate not implemented")
}
func (UnimplementedCouponServer) UpdateCouponTemplate(context.Context, *UpdateCouponTemplateRequest) (*CouponTemplateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCouponTemplate not implemented")
}
func (UnimplementedCouponServer) ListCouponTemplates(context.Context, *ListCouponTemplatesRequest) (*ListCouponTemplatesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCouponTemplates not implemented")
}
func (UnimplementedCouponServer) ReceiveCoupon(context.Context, *ReceiveCouponRequest) (*UserCouponResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReceiveCoupon not implemented")
}
func (UnimplementedCouponServer) GetUserCoupons(context.Context, *GetUserCouponsRequest) (*ListUserCouponsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserCoupons not implemented")
}
func (UnimplementedCouponServer) GetAvailableCoupons(context.Context, *GetAvailableCouponsRequest) (*ListUserCouponsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAvailableCoupons not implemented")
}
func (UnimplementedCouponServer) CalculateCouponDiscount(context.Context, *CalculateCouponDiscountRequest) (*CalculateCouponDiscountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CalculateCouponDiscount not implemented")
}
func (UnimplementedCouponServer) UseCoupons(context.Context, *UseCouponsRequest) (*UseCouponsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UseCoupons not implemented")
}
func (UnimplementedCouponServer) ReleaseCoupons(context.Context, *ReleaseCouponsRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReleaseCoupons not implemented")
}
func (UnimplementedCouponServer) CreateFlashSaleActivity(context.Context, *CreateFlashSaleActivityRequest) (*FlashSaleActivityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateFlashSaleActivity not implemented")
}
func (UnimplementedCouponServer) GetFlashSaleActivity(context.Context, *GetFlashSaleActivityRequest) (*FlashSaleActivityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFlashSaleActivity not implemented")
}
func (UnimplementedCouponServer) ListFlashSaleActivities(context.Context, *ListFlashSaleActivitiesRequest) (*ListFlashSaleActivitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListFlashSaleActivities not implemented")
}
func (UnimplementedCouponServer) GetActiveFlashSales(context.Context, *emptypb.Empty) (*ListFlashSaleActivitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetActiveFlashSales not implemented")
}
func (UnimplementedCouponServer) ParticipateFlashSale(context.Context, *ParticipateFlashSaleRequest) (*ParticipateFlashSaleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ParticipateFlashSale not implemented")
}
func (UnimplementedCouponServer) GetFlashSaleStock(context.Context, *GetFlashSaleStockRequest) (*FlashSaleStockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFlashSaleStock not implemented")
}
func (UnimplementedCouponServer) GetUserFlashSaleRecord(context.Context, *GetUserFlashSaleRecordRequest) (*ListFlashSaleRecordsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserFlashSaleRecord not implemented")
}
func (UnimplementedCouponServer) SubmitOrderWithCoupons(context.Context, *SubmitOrderWithCouponsRequest) (*SubmitOrderWithCouponsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitOrderWithCoupons not implemented")
}
func (UnimplementedCouponServer) ProcessFlashSaleWithInventory(context.Context, *ProcessFlashSaleWithInventoryRequest) (*ProcessFlashSaleWithInventoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProcessFlashSaleWithInventory not implemented")
}
func (UnimplementedCouponServer) GetTransactionStatus(context.Context, *GetTransactionStatusRequest) (*GetTransactionStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTransactionStatus not implemented")
}
func (UnimplementedCouponServer) TryFlashSale(context.Context, *ParticipateFlashSaleRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TryFlashSale not implemented")
}
func (UnimplementedCouponServer) ConfirmFlashSale(context.Context, *ParticipateFlashSaleRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConfirmFlashSale not implemented")
}
func (UnimplementedCouponServer) CancelFlashSale(context.Context, *ParticipateFlashSaleRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelFlashSale not implemented")
}
func (UnimplementedCouponServer) mustEmbedUnimplementedCouponServer() {}
func (UnimplementedCouponServer) testEmbeddedByValue()                {}

// UnsafeCouponServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to CouponServer will
// result in compilation errors.
type UnsafeCouponServer interface {
	mustEmbedUnimplementedCouponServer()
}

func RegisterCouponServer(s grpc.ServiceRegistrar, srv CouponServer) {
	// If the following call pancis, it indicates UnimplementedCouponServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&Coupon_ServiceDesc, srv)
}

func _Coupon_CreateCouponTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCouponTemplateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServer).CreateCouponTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Coupon_CreateCouponTemplate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServer).CreateCouponTemplate(ctx, req.(*CreateCouponTemplateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Coupon_GetCouponTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCouponTemplateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServer).GetCouponTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Coupon_GetCouponTemplate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServer).GetCouponTemplate(ctx, req.(*GetCouponTemplateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Coupon_UpdateCouponTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCouponTemplateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServer).UpdateCouponTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Coupon_UpdateCouponTemplate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServer).UpdateCouponTemplate(ctx, req.(*UpdateCouponTemplateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Coupon_ListCouponTemplates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCouponTemplatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServer).ListCouponTemplates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Coupon_ListCouponTemplates_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServer).ListCouponTemplates(ctx, req.(*ListCouponTemplatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Coupon_ReceiveCoupon_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReceiveCouponRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServer).ReceiveCoupon(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Coupon_ReceiveCoupon_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServer).ReceiveCoupon(ctx, req.(*ReceiveCouponRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Coupon_GetUserCoupons_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserCouponsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServer).GetUserCoupons(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Coupon_GetUserCoupons_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServer).GetUserCoupons(ctx, req.(*GetUserCouponsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Coupon_GetAvailableCoupons_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAvailableCouponsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServer).GetAvailableCoupons(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Coupon_GetAvailableCoupons_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServer).GetAvailableCoupons(ctx, req.(*GetAvailableCouponsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Coupon_CalculateCouponDiscount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CalculateCouponDiscountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServer).CalculateCouponDiscount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Coupon_CalculateCouponDiscount_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServer).CalculateCouponDiscount(ctx, req.(*CalculateCouponDiscountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Coupon_UseCoupons_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UseCouponsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServer).UseCoupons(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Coupon_UseCoupons_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServer).UseCoupons(ctx, req.(*UseCouponsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Coupon_ReleaseCoupons_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleaseCouponsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServer).ReleaseCoupons(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Coupon_ReleaseCoupons_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServer).ReleaseCoupons(ctx, req.(*ReleaseCouponsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Coupon_CreateFlashSaleActivity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFlashSaleActivityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServer).CreateFlashSaleActivity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Coupon_CreateFlashSaleActivity_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServer).CreateFlashSaleActivity(ctx, req.(*CreateFlashSaleActivityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Coupon_GetFlashSaleActivity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFlashSaleActivityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServer).GetFlashSaleActivity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Coupon_GetFlashSaleActivity_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServer).GetFlashSaleActivity(ctx, req.(*GetFlashSaleActivityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Coupon_ListFlashSaleActivities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListFlashSaleActivitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServer).ListFlashSaleActivities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Coupon_ListFlashSaleActivities_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServer).ListFlashSaleActivities(ctx, req.(*ListFlashSaleActivitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Coupon_GetActiveFlashSales_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServer).GetActiveFlashSales(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Coupon_GetActiveFlashSales_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServer).GetActiveFlashSales(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Coupon_ParticipateFlashSale_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ParticipateFlashSaleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServer).ParticipateFlashSale(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Coupon_ParticipateFlashSale_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServer).ParticipateFlashSale(ctx, req.(*ParticipateFlashSaleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Coupon_GetFlashSaleStock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFlashSaleStockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServer).GetFlashSaleStock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Coupon_GetFlashSaleStock_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServer).GetFlashSaleStock(ctx, req.(*GetFlashSaleStockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Coupon_GetUserFlashSaleRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserFlashSaleRecordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServer).GetUserFlashSaleRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Coupon_GetUserFlashSaleRecord_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServer).GetUserFlashSaleRecord(ctx, req.(*GetUserFlashSaleRecordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Coupon_SubmitOrderWithCoupons_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmitOrderWithCouponsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServer).SubmitOrderWithCoupons(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Coupon_SubmitOrderWithCoupons_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServer).SubmitOrderWithCoupons(ctx, req.(*SubmitOrderWithCouponsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Coupon_ProcessFlashSaleWithInventory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProcessFlashSaleWithInventoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServer).ProcessFlashSaleWithInventory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Coupon_ProcessFlashSaleWithInventory_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServer).ProcessFlashSaleWithInventory(ctx, req.(*ProcessFlashSaleWithInventoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Coupon_GetTransactionStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTransactionStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServer).GetTransactionStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Coupon_GetTransactionStatus_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServer).GetTransactionStatus(ctx, req.(*GetTransactionStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Coupon_TryFlashSale_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ParticipateFlashSaleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServer).TryFlashSale(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Coupon_TryFlashSale_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServer).TryFlashSale(ctx, req.(*ParticipateFlashSaleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Coupon_ConfirmFlashSale_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ParticipateFlashSaleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServer).ConfirmFlashSale(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Coupon_ConfirmFlashSale_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServer).ConfirmFlashSale(ctx, req.(*ParticipateFlashSaleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Coupon_CancelFlashSale_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ParticipateFlashSaleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServer).CancelFlashSale(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Coupon_CancelFlashSale_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServer).CancelFlashSale(ctx, req.(*ParticipateFlashSaleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// Coupon_ServiceDesc is the grpc.ServiceDesc for Coupon service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Coupon_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "Coupon",
	HandlerType: (*CouponServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateCouponTemplate",
			Handler:    _Coupon_CreateCouponTemplate_Handler,
		},
		{
			MethodName: "GetCouponTemplate",
			Handler:    _Coupon_GetCouponTemplate_Handler,
		},
		{
			MethodName: "UpdateCouponTemplate",
			Handler:    _Coupon_UpdateCouponTemplate_Handler,
		},
		{
			MethodName: "ListCouponTemplates",
			Handler:    _Coupon_ListCouponTemplates_Handler,
		},
		{
			MethodName: "ReceiveCoupon",
			Handler:    _Coupon_ReceiveCoupon_Handler,
		},
		{
			MethodName: "GetUserCoupons",
			Handler:    _Coupon_GetUserCoupons_Handler,
		},
		{
			MethodName: "GetAvailableCoupons",
			Handler:    _Coupon_GetAvailableCoupons_Handler,
		},
		{
			MethodName: "CalculateCouponDiscount",
			Handler:    _Coupon_CalculateCouponDiscount_Handler,
		},
		{
			MethodName: "UseCoupons",
			Handler:    _Coupon_UseCoupons_Handler,
		},
		{
			MethodName: "ReleaseCoupons",
			Handler:    _Coupon_ReleaseCoupons_Handler,
		},
		{
			MethodName: "CreateFlashSaleActivity",
			Handler:    _Coupon_CreateFlashSaleActivity_Handler,
		},
		{
			MethodName: "GetFlashSaleActivity",
			Handler:    _Coupon_GetFlashSaleActivity_Handler,
		},
		{
			MethodName: "ListFlashSaleActivities",
			Handler:    _Coupon_ListFlashSaleActivities_Handler,
		},
		{
			MethodName: "GetActiveFlashSales",
			Handler:    _Coupon_GetActiveFlashSales_Handler,
		},
		{
			MethodName: "ParticipateFlashSale",
			Handler:    _Coupon_ParticipateFlashSale_Handler,
		},
		{
			MethodName: "GetFlashSaleStock",
			Handler:    _Coupon_GetFlashSaleStock_Handler,
		},
		{
			MethodName: "GetUserFlashSaleRecord",
			Handler:    _Coupon_GetUserFlashSaleRecord_Handler,
		},
		{
			MethodName: "SubmitOrderWithCoupons",
			Handler:    _Coupon_SubmitOrderWithCoupons_Handler,
		},
		{
			MethodName: "ProcessFlashSaleWithInventory",
			Handler:    _Coupon_ProcessFlashSaleWithInventory_Handler,
		},
		{
			MethodName: "GetTransactionStatus",
			Handler:    _Coupon_GetTransactionStatus_Handler,
		},
		{
			MethodName: "TryFlashSale",
			Handler:    _Coupon_TryFlashSale_Handler,
		},
		{
			MethodName: "ConfirmFlashSale",
			Handler:    _Coupon_ConfirmFlashSale_Handler,
		},
		{
			MethodName: "CancelFlashSale",
			Handler:    _Coupon_CancelFlashSale_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "coupon.proto",
}
