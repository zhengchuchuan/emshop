// license that can be found in the LICENSE file.

// Code generated by "codegen -type=int"; DO NOT EDIT.

package code

// init register error codes defines in this source code to `emshop/pkg/errors`
func init() {
	register(ErrConnectDB, 500, "Init db error")
	register(ErrConnectGRPC, 500, "Connect to grpc error")
	register(ErrGoodsNotFound, 404, "Goods not found")
	register(ErrCategoryNotFound, 404, "Category not found")
	register(ErrBrandNotFound, 404, "Brand not found")
	register(ErrBannerNotFound, 404, "Banner not found")
	register(ErrCategoryBrandNotFound, 404, "CategoryBrand not found")
	register(ErrEsQuery, 500, "Es query error")
	register(ErrEsUnmarshal, 500, "Es unmarshal error")
	register(ErrCategoryHasChildren, 400, "Category has children")
	register(ErrInventoryNotFound, 404, "Inventory not found")
	register(ErrInvSellDetailNotFound, 400, "Inventory sell detail not found")
	register(ErrInvNotEnough, 400, "Inventory not enough")
	register(ErrLogisticsOrderNotFound, 404, "Logistics order not found")
	register(ErrLogisticsOrderExists, 400, "Logistics order already exists")
	register(ErrCreateLogisticsOrderFailed, 500, "Create logistics order failed")
	register(ErrLogisticsOrderStatusInvalid, 400, "Invalid logistics order status")
	register(ErrLogisticsOrderCannotCancel, 400, "Logistics order cannot be cancelled")
	register(ErrLogisticsOrderCannotUpdate, 400, "Logistics order cannot be updated")
	register(ErrLogisticsTrackNotFound, 404, "Logistics track not found")
	register(ErrCreateLogisticsTrackFailed, 500, "Create logistics track failed")
	register(ErrLogisticsTrackInvalid, 400, "Invalid logistics track data")
	register(ErrLogisticsCourierNotFound, 404, "Logistics courier not found")
	register(ErrLogisticsCourierExists, 400, "Logistics courier already exists")
	register(ErrLogisticsCourierUnavailable, 500, "Logistics courier unavailable")
	register(ErrShippingFeeCalculationFailed, 500, "Shipping fee calculation failed")
	register(ErrInvalidShippingAddress, 400, "Invalid shipping address")
	register(ErrInvalidShippingMethod, 400, "Invalid shipping method")
	register(ErrInvalidGoodsWeight, 400, "Invalid goods weight")
	register(ErrLogisticsStatusTransitionInvalid, 400, "Invalid logistics status transition")
	register(ErrLogisticsAlreadyShipped, 400, "Logistics order already shipped")
	register(ErrLogisticsAlreadyDelivered, 400, "Logistics order already delivered")
	register(ErrLogisticsNotShipped, 400, "Logistics order not shipped yet")
	register(ErrLogisticsCompanyNotSupported, 400, "Logistics company not supported")
	register(ErrLogisticsCompanyServiceUnavailable, 500, "Logistics company service unavailable")
	register(ErrLogisticsServiceUnavailable, 500, "Logistics service unavailable")
	register(ErrLogisticsDataIntegrityError, 500, "Logistics data integrity error")
	register(ErrLogisticsOperationTimeout, 500, "Logistics operation timeout")
	register(ErrShopCartItemNotFound, 404, "ShopCart item not found")
	register(ErrSubmitOrder, 400, "Submit order error")
	register(ErrNoGoodsSelect, 404, "No Goods selected")
	register(ErrPaymentNotFound, 404, "Payment order not found")
	register(ErrPaymentExists, 400, "Payment order already exists")
	register(ErrPaymentStatusInvalid, 400, "Payment status invalid")
	register(ErrPaymentAmountInvalid, 400, "Payment amount invalid")
	register(ErrPaymentMethodInvalid, 400, "Payment method invalid")
	register(ErrPaymentExpired, 400, "Payment expired")
	register(ErrCreatePaymentFailed, 500, "Create payment order failed")
	register(ErrPaymentAlreadyPaid, 400, "Payment order already paid")
	register(ErrPaymentAlreadyCancelled, 400, "Payment order already cancelled")
	register(ErrPaymentCannotCancel, 400, "Payment order cannot be cancelled")
	register(ErrPaymentUpdateFailed, 500, "Update payment order failed")
	register(ErrPaymentProcessFailed, 500, "Payment process failed")
	register(ErrPaymentConfirmFailed, 500, "Payment confirmation failed")
	register(ErrPaymentRefundFailed, 500, "Payment refund failed")
	register(ErrPaymentCallbackInvalid, 400, "Payment callback invalid")
	register(ErrStockReservationFailed, 500, "Stock reservation failed")
	register(ErrStockReservationNotFound, 404, "Stock reservation record not found")
	register(ErrStockReleaseFailed, 500, "Stock release failed")
	register(ErrStockConfirmFailed, 500, "Stock confirmation failed")
	register(ErrStockInsufficientForReservation, 400, "Insufficient stock for reservation")
	register(ErrUserNotFound, 404, "User not found")
	register(ErrUserAlreadyExists, 400, "User already exists")
	register(ErrUserPasswordIncorrect, 400, "User password incorrect")
	register(ErrSmsSend, 400, "Send sms error")
	register(ErrCodeNotExist, 400, "Sms code incorrect or expired")
	register(ErrCodeInCorrect, 400, "Sms code incorrect")
	register(ErrEncryptionFailed, 500, "Password encryption failed")
	// 优惠券服务错误代码注册 (101001-101099) - 使用语义化HTTP状态码
	register(101001, 404, "Resource not found")
	register(101002, 400, "Invalid request parameters")
	register(101003, 503, "Resource not available")          // 服务不可用更准确
	register(101004, 429, "Resource limit exceeded")         // 限流场景
	register(101005, 500, "Database operation error")
	register(101006, 500, "Redis operation error")
	register(101007, 404, "Coupon template not found")
	register(101008, 422, "Coupon template is inactive")     // 业务逻辑验证失败
	register(101009, 404, "User coupon not found")
	register(101010, 422, "Coupon has expired")              // 业务逻辑验证失败
	register(101011, 409, "Coupon has been used")            // 冲突状态
	register(101012, 422, "Coupon not available for use")    // 业务逻辑验证失败
	register(101013, 429, "Coupon usage limit exceeded")     // 限流场景
	register(101014, 404, "Flash sale activity not found")
	register(101015, 422, "Flash sale activity is not active") // 业务逻辑验证失败
	register(101016, 409, "Flash sale stock is empty")       // 库存冲突
	register(101017, 429, "User flash sale participation limit exceeded") // 限流场景
	register(101018, 409, "User has already participated in this flash sale") // 冲突状态
}
